NodeAplicacoes *ler_arquivo_aplicacoes(const char *nomeArquivo, int riscoMaximoPermitido) {
    FILE *file = fopen(nomeArquivo, "r");
    if (!file) {
        perror("Erro ao abrir o arquivo de aplicações");
        exit(1);
    }

    char linha[256];
    NodeAplicacoes *lista = NULL;

    while (fgets(linha, sizeof(linha), file) != NULL) {
        if (linha[0] == '#' || linha[0] == '\n')
            continue;
        if (linha[0] == 'f')
            break;

        char tipo;

        NodeAplicacoes *novo = malloc(sizeof(NodeAplicacoes));
        if (!novo) {
            fprintf(stderr, "Erro de alocação de memória\n");
            exit(1);
        }

        if (sscanf(linha, "%c %99s %99s %f %d",
                   &tipo, novo->inv.nomeAtivo, novo->inv.categoria,
                   &novo->inv.taxaRetorno, &novo->inv.risco) == 5) {

            // Ignora se não for tipo 'i'
            if (tipo != 'i') {
                free(novo);
                continue;
            }

            // Se for aplicado um filtro de risco e o risco for maior, ignora
            if (riscoMaximoPermitido != -1 && novo->inv.risco > riscoMaximoPermitido) {
                free(novo);
                continue;
            }

            // Insere no início da lista
            novo->next = lista;
            lista = novo;

        } else {
            free(novo);
        }
    }

    fclose(file);
    return lista;
}

// Para ler o arquivo de capitalização (aceita qualquer risco)
NodeAplicacoes *listaCap = ler_arquivo_aplicacoes("arquivo_cap.txt", -1);

// Para ler o arquivo de descapitalização (somente risco 1 e 2)
NodeAplicacoes *listaDescap = ler_arquivo_aplicacoes("arquivo_descap.txt", 2);
