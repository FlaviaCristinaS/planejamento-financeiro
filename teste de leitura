//ARQUIVO META;

    // zerando elementos
    ParametrosMeta meta = {0};
    ler_arquivo_meta(arqMeta, &meta);

    // Teste: imprimir o conteúdo lido do arquivo-meta
    printf("\n=== Dados lidos do arquivo-meta ===\n");
    printf("Idade Formatura: %d\n", meta.idadeFormatura);
    printf("Idade Fim Capitalização: %d\n", meta.idadeFimCapitalizacao);
    printf("Salário Médio Líquido: %.2f\n", meta.salarioMedioLiquido);
    printf("Percentual de Investimento: %.2f\n", meta.percentualInvestimento);
    printf("Patrimônio Acumulado: %.2f\n", meta.patrimonioAcumulado);
    printf("Idade Fim Retirada: %d\n", meta.idadeFimRetirada);

    //ler_arquivoCap();
    //ler_arquivoDescap();

    // Após chamar as funções:
    NodeInvestimento *listaCap = ler_arquivoCap(arqCapitalizao);
    NodeInvestimento *listaDescap = ler_arquivoDescap(arqDescapitalizao);

    // Teste básico: percorrer lista de capitalização
    printf("\n=== Investimentos para Capitalização ===\n");
    NodeInvestimento *p1 = listaCap;
    while (p1 != NULL) {
        printf("Ativo: %s | Taxa: %.4f | Risco: %d\n", p1->inv.nomeAtivo, p1->inv.taxaRetorno, p1->inv.risco);
        p1 = p1->next;
    }

    // Teste básico: percorrer lista de descapitalização
    printf("\n=== Investimentos para Descapitalização ===\n");
    NodeInvestimento *p2 = listaDescap;
    while (p2 != NULL) {
        printf("Ativo: %s | Taxa: %.4f | Risco: %d\n", p2->inv.nomeAtivo, p2->inv.taxaRetorno, p2->inv.risco);
        p2 = p2->next;
    }

    //gerar_relario();
